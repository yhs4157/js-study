HTML5 input 타입

 - HTML form 컨트롤 존재는 디자이너의 문서와는 다를 것이다. 웹 개발자는 때때로 form
 컨트롤을 빌드한다. 우리는 확장된 튜토리얼에 이것을 넣었다. 

E-mail 주소 창
 - <input type="email" id="email" name="email>
 - 이 타입을 사용할 때, 유저는 이 창에 명확한 이메일 주소를 기입하여야한다. 어떤 컨텐츠는
 form 제출 시에 브라우저가 에러를 출력하도록 야기한다. 너는 아래와 같은 액션을 보았을 것이다. 

 - 너는 multiple 속성을 이용할 수 있다. 
 ex) <input type="email" id="email" name="email" multiple>

 - 몇몇 기기들에서는 다른 가상 키보드가 조금 더 이메일 주소 입력에 맞춤된 형태로 나타날 것이다. 
 @ key를 포함한. 안드로이드 파이어폭스 브라우저는 아래와 같다. 

클라이언트 측 검사
 - 너가 email 파트에서 본 것처럼 클라이언트 사이드 에러 검사를 제공한다. 브라우저로부터 제공되는
 데이터는 서버로 보내기 전에. 이것은 유저가 form을 정확하게 채우고 시간을 아끼기를 돕는 것을 목표로 한다.
 너의 데이터가 잘못된다는 것을 바로 아는 것은 유용하다. 서버에서 한번 돌고 오는 것을 기다리는 것보다. 

 - 하지만 이것은 철저한 보안조치를 고려한 것은 아니다. 너의 앱은 항상 보안검사를 작동한다. 어떤 form 제출
 데이터를 클라이언트 뿐만 아니라 서버 측에서도. 왜냐면 클라이언트 검사는 종료하기 너무 쉽다. 그래서 악의적인
 유저는 나쁜 데이터 보내기 너무 쉽다. 웹 보안을 읽어라 일어날 수 있는 경우에 대해서. 서버 측 검사를 개선하는 것은
 이 모듈의 범위에 몇몇 개가 있다. 

 - a@b모양은 제한된 디폴트로 email 주소 검사가 목적으로 해라. 이것은 email input 타입이 인트라넷 email 주소를
 허가하도록 한다. 다른 검사행위를 개선하기 위해서, 너는 pattern 속성을 사용할 수 있다. 그리고 너는 에러 메시지를 변경
 할 수 있다. 우리는 이 클라이언트 측 form 검사 방법에 대해 이야기할 것이다. 

Search 창
 - search 창은 앱과 페이지에 탐색 박스를 만들기 위해 사용된다. 이 타입은 type 속성을 위한
 search 값을 사용하기 위한 집합이다. 
 ex) <input type="search" id="search name="search>

 - text와 search 창의 차이는 이것을 나타내는 브라우저 스타일이이다. 종종 search 창은
 때때로 Ⓧ표시를 띄운다. 그것을 눌렀을 때에는 창이 비워진다. 추가적으로 동적인 키보드에서는 
 search 키나 돋보기 아이콘이 출력될 것이다. 

 - 또다른 가치 있는 차이는 search field의 값은 자동적으로 저장되며 재사용된다. 
 같은 웹사이트에 다른 페이지 사이에서; 이것은 현재 브라우저 대부분이 자동적으로 제공한다. 

Phone number 창
 - 핸드폰 번호에 채우기위한 특별한 창은 type 속성의 값을 tel처럼 생성할 수 있다. 
 <input type="tel" id="tel" name="tel>

 - 터치 기기와 같은 다이나믹 키보드을 접근할 때, 대부분 기기는 type="tel" 숫자 keypad를
 마주친다. 이 타입은 숫자 패드를 사용할 떄 유용하다. 그리고 핸드폰 숫자를 위할 필요가 없다. 

 - 넓은 숫자 형식의 다양성 덕분에, 이 타입은 값에 유저가 가진 특징에 어떤 제약도 지배받지 않는다. 

 - 우리가 보다 쉽게 언급함으로 그 pattern 속성은 제약을 압도할 필요가 수 있다. 그 제약은
 Client-side form vvalidation에 대해 우리가 배울. 

URL 창
 ex) <input type="url" id="url" name="url">

 - 이것은 이 창에 특별한 검사제약을 추가한다. 그 브라우저는 protocol이 없을 때 에러를 출력한다. 

숫자 창
 - 숫자가 들어가는 컨트롤은 <input> 숫자 타입으로 만들 수 있다. 이 컨트롤은 text 창처럼
 보이지만 오직 부동소수점만 제공하고, 컨트롤의 값을 증감에 대한 spinner의 형식에 버튼을 제공한다. 
 다이나믹 키보드에 기기에서는 숫자 키보드는 일반적으로 보인다. 

 - number input 타입에서는 너는 최솟값과 최댓값을 제한할 수 있다. min과 max 속성을 통해

 - 너는 step 속성은 증감을 설정할 수 있다. default로 그 nubmer input은 오직 검사한다. 
 그 수가 숫자인지를. 부동 소수점은 허가한다. step ="any"를 사용하여. 

 - 예제를 보자. 
    ex) <input type="number" name="age" id="age" min="1" max="10" step=2>
    전체값은 1~10 사이이다. 그리고 전체 증감 버튼은 2값씩 변화한다. 

    ex) <input type="number" name="change" id="pennies" min="0" max="1" step="0.01">
    전체값은 0~1 사이이다. 그리고 0.01값씩 증감 버튼이 있다. 

 - number input 타입은 valid 값을 제한을 둔다. 예를 들면 사람의 나이나 몸무게같은
 증가가 너무 크거나 tel 타입은 더 나은 옵셕이다. 그것은 숫자 키보드를 제공한다.

Slider 컨트롤

 - 숫자를 제공하는 다른 방식은 slider를 사용하는 것이다. 너는 집 매매 사이트에서 꽤 보았을 것이다. 
 너가 최대 자산값을 반영하려할 때. 

 - 사용면에서, 슬라이더는 텍스트 필드보다 덜 정확하다. 따라서 슬라이더는 정확한 값이 중요치 않은 수에
 사용한다. 

 - 슬라이더를 구성하는 것은 중요하다. 그 끝에, min, max, step 속성을 명시하는 것을 추천한다. 

 - 예시를 보자 
 ex) <label for="price">Choose a maximum house price: </label>
     <input type="range" name="price" id="price" min="50000" max="500000" step="100" value="250000">
     <output class="price-output" for="price></output>

 - 슬라이더의 문제는 그들은 현재 값에 대한 가시적인 피드백을 제공하지 않는다는 것이다. 그래서
 <output> 요소를 포함한 이유이다. 너는 <input>이나 <output> 값을 본적이 있을 것이다. 하지만 
 <outpu>은 특별하다. <label>처럼. 그것은 for 속성이 너가 관여하고 싶은 요소에 갈 수 있게 해준다. 

 - 현재값을 출력하기 위해서는 그것은 변화하여하고, 너는 javascript를 사용할 수 있다. 하지만 쉬우니 걱정마라. 
 ex) 
    const price = document.querySelector('#price'); 
    const output = document.querySelector('.price-output'); 

    output.textContent = price.value; 

    price.addEventListener('input', function() {
        output.textContext = price.value; 
    });

날짜 시간 추출기
 - 날짜와 시간값을 모으는 것은 전통적인 웹 개발자의 악몽이었다. 좋은 유저 경험을 위해,
 캘린더 선택 UI가 제공하는 것은 중요했다. 유저가 날짜 선택할 수 있음은 기존 캘린더 변화나
 분석이 어려운 다른 형태의 캘린더 사용없이. 이전의 밀리니엄의 마지막 분은 다른 방식으로 표현될
 수 있다. 

 - HTML 데이터 컨트롤은 이 특별한 데이터 종류를 다를 수 있게 한다. 캘린더 위젯과 데이터 형태 만들기

 - 날짜와 시간 컨트롤은 <input> 요소와 type 속성에 적절한 값으로 만든다. 여기 <select> 요소
 예제가 있다. 브라우저가 제공하지 않는. 

 - 다른 사용가능한 타입을 봐라. 이 타입을 사용은 꽤 복잡함도 주목해라. 특히 브라우저 지원을 고려해라. 
 전체 디테일을 알아차리기 위해서, 각 타입에 대한 레퍼런스 페이지를 따라라. 

 색 추출기 컨트롤
  - 색은 항상 다루기 힘들다. 그들은 표현할 여러 방법이 있기 때문이다. 

  - color 컨트롤은 <input> 요소를 사용함으로 생성할 수 있다. 
  ex) <input type="color" name="color" id="color">

HTML5에서 제공하는 form 
- email
- search
- tel
- URL
- number
- slider
- datetime-local, month, week, time, date etc.
- color
