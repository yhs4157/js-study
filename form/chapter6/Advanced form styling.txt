이전 챔터에서의 문제점 

나쁜 점 : 몇몇 요소는 조금 스타일링하기 어렵다. 복잡한 css를 필요로 하거나 조금 더 특별한 트릭이 필요하다. 

못생긴 점 : 몇몇 요소는 css를 통해 스타일링할 수 없다. 대신에
    - 요소는 위젯을 밑에 생성한다. <select>, <option>, <optgroup>, <datalist>
    - <input type="color">
    - 데이터 관련 조절 <input type="datetime-local">
    - <input type="range">
    - <input type="file">
    - <progress>, <meter>
 - appearance 프로퍼티, 즉 조금 더 스타일링할 수 있기 유용하게 하는 것이다. 

Appearance: OS 레벨에서 스타일 조절하기

 - 이전 부분에서 우리는 전통적으로 웹 폼 조절 스타일링은 크게 os아래에서 이루어진다고 이야기 했다. 
 그것은 그 컨트롤의 외관에 관련된 문제의 일 부분이였다. 

 - 그 appearance 프로퍼티는 os나 시스템 레벨 스타일링이 웹 폼 조절에게 적용된 방법으로써 만들어진다.
 불행히도, 그 프로퍼티의 독특한 구현의 행동은 브라우저들 사이에 매우 달랐었다. 그것은 전혀 유용치 않았다. 
 새로운 구현은 조금더 일관되게 행동한다; 흥미를 충족하는 것은, 브라우저들의 전신 Chromium과 사파리, 파이어폭스는
 모두 webkit을 지원한다. 파이어폭스는 이것을 채택했다. 왜냐하면 웹 개발자들이 대부분 -webkit- 접두사를 
 사용한 버전을 이용했기에 그것이 더 호환성있어보였기 때문이다. 

 - 너가 래퍼런스 페이지를 본다면, 너는 여러 사용가능한 가치를 찾을 수 있다. 하지만 지금까지 사용할 수 있는
 값은 none일 것이다. 이것은 너가 시스템 레벨 스타일링을 사용하는 어떤 컨트롤러도 멈춘다. 그리고 너가 css를 
 사용하는 그 스타일을 빌드업 할 것이다. 

 - 대부분, 그 효과는 css 스타일러 만들어진 경계 스타일링을 제거한다. 하지만 이것은 필수적이지 않다. 
 이 경우에는 그것은 조금 더 편리해진다. 우리는 이것을 알아볼 것이다. 

Taming search boxes

 - <input type="search">는 기본적으로 텍스트 인풋이다. 그래서 appearance: none;이 왜 유용하냐? 
 그 대답은 Chromium이 서치 박스에 스타일링 제한을 두었기 때문이다. - 너는 높이와 폰트 크기를 조절할 수 없다. 
 예를 들면, 더이상 크롬 브라우저에 Webkit 랜더링 엔진을 사용할 수 없다. 그래서 아쿠아 appearance는 폼 컨트롤러
 에 기본으로 제공된다. 아쿠아가 적용됨으로 몇몇 폼은 크기조절할 수 없다. 

 - 이것은 appearance: none; 사용할 수 있다. 그리고 그것은 기본 아쿠아 appearance이다. 

중간 과정부터 이해가 모자라 넘김. 
 - 핵심 : 이번 챕터에서는 css로 처리하기 힘든 HTML form들에 관한 styling을 다루었다. 
 불가능한 것은 아니고 조금 지저분한 방식으로 변형을 가할 수 있다. 